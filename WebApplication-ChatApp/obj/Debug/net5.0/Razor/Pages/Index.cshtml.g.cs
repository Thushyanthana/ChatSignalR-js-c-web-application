#pragma checksum "D:\Backend\.netCore-Chat-APP\WebApplication-ChatApp\WebApplication-ChatApp\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4e6fd42d029609364f1509f133472526ef597768"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(WebApplication_ChatApp.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace WebApplication_ChatApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Backend\.netCore-Chat-APP\WebApplication-ChatApp\WebApplication-ChatApp\Pages\_ViewImports.cshtml"
using WebApplication_ChatApp;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4e6fd42d029609364f1509f133472526ef597768", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"08286780dfb3aebac7fc55ca70671a81466c50ff", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/signalr/dist/browser/signalr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\Backend\.netCore-Chat-APP\WebApplication-ChatApp\WebApplication-ChatApp\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-center"">
    <h1 class=""display-4"">Welcome</h1>
    <p>Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
</div>


<div class=""container"">

    <div  id=""userinfo""   class=""row"">
        <label  for=""userName"">Please Input your userName</label>
        <input type=""text""  class=""form-control""  id=""username""  name=""username""  autocomplete=""off""/>
        <button  type=""button""  class=""btn btn-block""  onclick=""SetUsername();"">Join</button>
    </div>  

    <div id=""messagearea"" class=""row"" style=""display:none"">
        <div>Joined as:<b><span id=""username1"">Not Set</span></b> </div>
        <hr />
        <div class=""row"">
            <div class=""col-6"">

                <ul  id=""messagesList""></ul>

            </div>
        </div>
        <hr />
        <input type=""text"" id=""message""  autocomplete=""off"" />
        <input type=""button""  id=""sendButton"" class=""sendButton"" value=""send Message""/>
</div>
</div>");
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4e6fd42d029609364f1509f133472526ef5977684671", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    ""use strict"";
    var connection = new signalR.HubConnectionBuilder().withUrl(""/chathub"").build();
    var username = """";
    var messages = [];
    var outPut = [];


    //Disable send button until connection is established
    document.getElementById(""sendButton"").disabled = true;

    connection.on(""ReceiveMessage"", function (user, message) {
        console.log(user,message);
        var msg = message.replace(/&/g, ""&amp;"").replace(/</g, ""&lt;"").replace(/>/g, ""&gt;"");
        var encodeMsg = user + ""says : "" + msg;
        var li = document.createElement(""li"");
        li.textContent = encodedMsg;

        messages.push(
            {
                user: 'Receiver',
                message: li.textContent
            }
        );
       
        for (var i = 0; i < messages.length; i++) {

            outPut.push('<li  class=""receiv"">' + messages[i]['message'] + '</li>');
            receiv.style.float = 'left';
            receiv.style.color='red';
        ");
            WriteLiteral(@"}
        div.innerHTML = outPut;
        console.log(li.textContent);
        document.getElementById(""messagesList"").appendChild(li);
    });

    connection.start().then(function () {
        document.getElementById(""sendButton"").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById(""sendButton"").addEventListener(""click"", function (event) {
        var message = document.getElementById(""message"").value;       
        var div = document.getElementById(""messagesList"")

        connection.invoke(""SendMessage"", username, message).then(function () {
            messages.push(
                {
                    user: 'me',
                    message: message
                }
            );
           
            for (var i = 0; i < messages.length; i++) {
                
                    outPut.push(""<li>"" + messages[i]['message'] +""</li>"" );
              
            }
            div.innerHTML ");
            WriteLiteral(@"= outPut;
            document.getElementById(""message"").value = """";
        }).catch(function (err) {
            return console.error(err);
        });
        event.preventDefault();
    });

    function SetUsername() {
     var name=   $('#username').val();
        console.log($('#username').val());

        if (name==="" "") {
            alert(""Please enter your Username"");
            return;
        }

        username = name;
        document.getElementById(""userinfo"").style.display = 'none';
        document.getElementById(""messagearea"").style.display = 'block';
        document.getElementById(""username1"").innerText = name;
    }

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
